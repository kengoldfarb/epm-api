{
	"name": "@meemproject/meem-api",
	"version": "1.3.5",
	"description": "Meem API",
	"main": "build/server.js",
	"engines": {
		"node": "^14"
	},
	"scripts": {
		"########## Build ##########": "",
		"clean": "rm -rf build/*",
		"build": "npm run clean ; tsc ; echo \"Finished Building\"",
		"release": "semantic-release",
		"########## Run ##########": "",
		"start": "RUN_PRODUCTION=true node ./build/cluster.js",
		"start-cron": "RUN_PRODUCTION=true node build/cron/cron.js",
		"cron": "npm run kill-inspect && NODE_ENV=local PORT=3005 tsnd --inspect=4006 --respawn --transpile-only --ignore-watch=src/types/meem.generated.ts src/cron/cron.ts",
		"local": "npm run kill-inspect && NODE_ENV=local PORT=3005 tsnd --exit-child --inspect=4005 --respawn --transpile-only --ignore-watch=src/types/meem.generated.ts src/server.ts",
		"########## DB Migrations ##########": "",
		"migration:create": "sequelize migration:create",
		"db:migrate": "sequelize db:migrate",
		"db:migrate:local": "NODE_ENV=local node ./node_modules/.bin/sequelize db:migrate",
		"db:migrate:development": "NODE_ENV=development node ./node_modules/.bin/sequelize db:migrate",
		"db:migrate:stage": "NODE_ENV=staging node ./node_modules/.bin/sequelize db:migrate",
		"db:migrate:production": "NODE_ENV=production node ./node_modules/.bin/sequelize db:migrate",
		"########## Tests ##########": "",
		"test": "NODE_ENV=local DISABLE_MIGRATIONS=true ALLOW_NON_SSL=true ORM_LOGGING=false LOG_LEVEL=debug TESTING=true mocha --exit -r ts-node/register/transpile-only 'src/**/*.test.ts'",
		"########## Serverless ##########": "",
		"deploy:dev": "SLS_DEBUG=* sls deploy -s dev",
		"deploy:staging": "SLS_DEBUG=* sls deploy -s staging",
		"deploy:production": "SLS_DEBUG=* sls deploy -s production",
		"docker:clean": "docker exec -it deploy_linux bash -i -c \"cd /app; rm -rf node_modules\"",
		"docker:installYarn": "docker exec -it deploy_linux bash -i -c \"cd /app; npm i -g yarn\"",
		"docker:install": "docker exec -it deploy_linux bash -i -c \"cd /app; yarn\"",
		"docker:build": "docker exec -it deploy_linux bash -i -c \"cd /app; yarn build\"",
		"docker:deploy:dev": "docker exec -it deploy_linux bash -i -c \"cd /app; source src/.env.dev; yarn deploy:dev\"",
		"docker:deploy:staging": "npm run build:serverless && docker exec -it deploy_linux bash -i -c \"cd /app; source src/.env.staging.sls; npm install --production && npm run deploy:staging\"",
		"docker:deploy:production": "npm run build:serverless && docker exec -it deploy_linux bash -i -c \"cd /app; source src/.env.production.sls; rm -rf node_modules && npm install --production && npm run deploy:production\"",
		"########## Lint ##########": "",
		"lint": "eslint '**/*.ts' --ignore-pattern '**/*.test.ts' --ignore-pattern '**/tests/**/*.ts' --ignore-pattern '**/serverless/**/*.ts' && tsc -p tsconfig.json --noEmit",
		"lint:fix": "eslint --fix '**/*.ts'",
		"########## Misc ##########": "",
		"cost": "cost-of-modules",
		"postinstall": "if [ \"${RUN_POSTINSTALL:=\"false\"}\" = \"true\" ]; then npm run build; else echo \"Skipping postinstall RUN_POSTINSTALL is not set to true.\" && exit 0; fi",
		"kill-inspect": "kill-port 4005",
		"########## Meems ##########": "",
		"generateTypes": "typechain --target=ethers-v5 'src/abis/*.json' --out-dir='src/types'",
		"fetchMeemABI": "tsnd --transpile-only src/scripts/fetchMeemABI.ts",
		"fetchWhitelist": "tsnd --transpile-only src/scripts/fetchWhitelist.ts",
		"fetchAccess": "tsnd --transpile-only src/scripts/fetchAccess.ts",
		"fetchMeemIdABI": "tsnd --transpile-only src/scripts/fetchMeemIdABI.ts",
		"fetchMeemMarketABI": "tsnd --transpile-only src/scripts/fetchMeemMarketABI.ts"
	},
	"dependencies": {
		"@kengoldfarb/log": "^1.0.3",
		"@octokit/rest": "^18.12.0",
		"@sentry/node": "^6.14.0",
		"@types/sharp": "^0.29.3",
		"aws-sdk": "^2.1020.0",
		"bcrypt": "^5.0.1",
		"bignumber.js": "^9.0.1",
		"body-parser": "^1.18.2",
		"busboy": "^0.3.1",
		"cookie-parser": "^1.4.1",
		"cron": "^1.1.0",
		"dotenv": "^10.0.0",
		"ethers": "^5.5.1",
		"express": "^4.17.1",
		"fs-extra": "^10.0.0",
		"globby": "^11",
		"ipfs-http-client": "^53.0.1",
		"jsonwebtoken": "^8.5.1",
		"lodash": "^4.17.21",
		"luxon": "^2.0.2",
		"moment": "^2.29.1",
		"moralis": "^0.0.135",
		"pg": "^8.7.1",
		"sequelize": "^6.9.0",
		"serverless": "^2.64.1",
		"sharp": "^0.29.2",
		"string-argv": "^0.3.1",
		"superagent": "^6",
		"supertest": "^6.1.6",
		"twitter-api-v2": "^1.7.0",
		"typescript": "^4.4.4",
		"umzug": "^2.3.0",
		"uuid": "^8.3.2",
		"ws": "^8.2.3"
	},
	"devDependencies": {
		"@kengoldfarb/semantic-release-config": "^1.0.0",
		"@typechain/ethers-v5": "^8.0.1",
		"@types/aws-lambda": "^8.10.85",
		"@types/bcrypt": "^5.0.0",
		"@types/busboy": "^0.3.1",
		"@types/chai": "^4.2.22",
		"@types/cookie-parser": "^1.4.2",
		"@types/cron": "^1.7.3",
		"@types/dotenv": "^8.2.0",
		"@types/express": "^4.17.13",
		"@types/faker": "^5.5.9",
		"@types/fs-extra": "^9.0.13",
		"@types/jsonwebtoken": "^8.5.6",
		"@types/lodash": "^4.14.176",
		"@types/luxon": "^2.0.5",
		"@types/mocha": "^9.0.0",
		"@types/node": "^16.11.6",
		"@types/pg": "^8.6.1",
		"@types/supertest": "^2.0.11",
		"@types/umzug": "^2.3.2",
		"@types/uuid": "^8.3.1",
		"@types/ws": "^8.2.0",
		"aws-lambda": "^1.0.6",
		"babel-eslint": "^10.1.0",
		"chai": "^4.3.4",
		"chokidar-cli": "^3.0.0",
		"concurrently": "^6.3.0",
		"cost-of-modules": "^1.0.1",
		"eslint": "^7.32.0",
		"eslint-config-kengoldfarb": "^1.3.0",
		"faker": "^5.5.3",
		"kill-port": "^1",
		"mocha": "^9.1.3",
		"prettier": "^2.4.1",
		"puppeteer": "^13.0.0",
		"puppeteer-extra": "^3.2.3",
		"puppeteer-extra-plugin-adblocker": "^2.12.0",
		"puppeteer-extra-plugin-stealth": "^2.9.0",
		"sequelize-cli": "^6.3.0",
		"sqlite3": "^5.0.2",
		"ts-node": "^10.4.0",
		"ts-node-dev": "1.1.8",
		"typechain": "^6.0.2"
	},
	"optionalDependencies": {
		"fsevents": "^2.3.2"
	}
}
